[build-system]
requires = ["hatchling>=1.22.0"]
build-backend = "hatchling.build"

[project]
name = "hf-model-inspector"
version = "0.1.0"
description = "A package and GitHub Action to generate quality reports on Hugging Face model stats and usage, addressing ambiguity in open model releases."
readme = "README.md"
requires-python = ">=3.9"
license = { text = "Apache-2.0" }
authors = [{ name = "Parag Ekbote", email = "paragekbote23@gmail.com" }]
dependencies = [
  "huggingface_hub>=0.24.0",
  "transformers>=4.21.0",
  "python-dotenv>=1.0.0",
  "rich>=13.9.0",
]

[project.urls]
homepage = "https://github.com/ParagEkbote/hf-model-inspector"
repository = "https://github.com/ParagEkbote/hf-model-inspector"
issues = "https://github.com/ParagEkbote/hf-model-inspector/issues"

[tool.hatch.build]
source-directories = ["src"]

[tool.hatch.build.targets.wheel]
packages = ["src/hf_model_inspector"]

# -----------------------------
# ✅ Ruff configuration (fixed)
# -----------------------------
[tool.ruff]
line-length = 88
target-version = "py39"       # must be a string, not list
select = ["E", "F", "B", "I", "UP"]
ignore = ["E501"]  # optional: keep if you want to ignore long-line warnings

# -----------------------------
# ✅ Type checker configuration
# -----------------------------
[tool.ty.rules]
# Ignore rules that are stricter than mypy for transition period
unresolved-import = "ignore"
invalid-assignment = "ignore"  # mypy is more permissive with Any assignments
call-non-callable = "ignore"   # mypy allows more dynamic method calls
index-out-of-bounds = "ignore" # mypy is more permissive with tuple indexing
unresolved-attribute = "ignore" # mypy is more permissive with module attributes
possibly-unbound-attribute = "ignore" # mypy doesn't warn about this as much
redundant-cast = "ignore"      # mypy doesn't warn about redundant casts
unsupported-operator = "ignore" # mypy supports | syntax with from __future__ import annotations
invalid-argument-type = "ignore" # mypy is more permissive with argument types

# -----------------------------
# ✅ Default dev environment
# -----------------------------
[tool.hatch.envs.default]
dependencies = [
  "ruff",
  "mypy",
  "pytest",
  "pytest-asyncio",
  "pre-commit",
  "twine",
]

[tool.hatch.envs.default.scripts]
lint = "ruff check src"
format = "ruff format src"
test = "pytest -v"
precommit = "pre-commit run --all-files"

# -----------------------------
# ✅ Separate testing group
# -----------------------------
[tool.hatch.envs.test]
dependencies = ["pytest", "pytest-cov", "pytest-asyncio", "mutatest"]
[tool.hatch.envs.test.scripts]
unit = "pytest tests/unit --cov=src/hf_model_inspector --cov-report=term-missing"
integration = "pytest tests/integration --cov=src/hf_model_inspector --cov-report=term-missing"
mutate = "mutatest --src src/hf_model_inspector --test tests/unit"

# Optional CI convenience
[tool.hatch.envs.test.env-vars]
PYTHONWARNINGS = "ignore::DeprecationWarning"
